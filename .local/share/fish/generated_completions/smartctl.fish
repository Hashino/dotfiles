# smartctl
# Autogenerated from man page /usr/share/man/man8/smartctl.8.gz
complete -c smartctl -s h -l help -l usage -d 'Prints a usage message to STDOUT and exits'
complete -c smartctl -s V -l version -l copyright -l license -d 'Prints version, copyright, license, home page and SVN revision information fo…'
complete -c smartctl -s i -l info -d 'Prints the device model number, serial number, firmware version, and ATA Stan…'
complete -c smartctl -l identify -d '[ATA only] Prints an annotated table of the IDENTIFY DEVICE data'
complete -c smartctl -s a -l all -d 'Prints all SMART information about the device'
complete -c smartctl -s x -l xall -d 'Prints all SMART and non-SMART information about the device'
complete -c smartctl -l scan -d 'Scans for devices and prints each device name, device type and protocol ([ATA…'
complete -c smartctl -l scan-open -d 'Same as --scan, but also tries to open each device before printing device info'
complete -c smartctl -s g -l get -d 'Get non-SMART device settings'
complete -c smartctl -s j -l json -d 'Enables JSON or YAML output mode'
complete -c smartctl -s q -l quietmode -d 'Specifies that smartctl should run in one of the quiet modes described here'
complete -c smartctl -s d -l device -d 'Specifies the type of the device.  The valid arguments to this option are: '
complete -c smartctl -s T -l tolerance -d '[ATA only] Specifies how tolerant smartctl should be of ATA and SMART command…'
complete -c smartctl -s b -l badsum -d '[ATA only] Specifies the action smartctl should take if a checksum error is d…'
complete -c smartctl -s r -l report -d 'Intended primarily to help smartmontools developers understand the behavior o…'
complete -c smartctl -s n -l nocheck -d '[ATA, SCSI] Specifies if smartctl should exit before performing any checks wh…'
complete -c smartctl -s s -l smart -d 'Enables or disables SMART on device'
complete -c smartctl -s o -l offlineauto -d '[ATA only] Enables or disables SMART automatic offline test, which scans the …'
complete -c smartctl -s S -l saveauto -d '[ATA] Enables or disables SMART autosave of device vendor-specific Attributes'
complete -c smartctl -l set -d 'Gets/sets non-SMART device settings'
complete -c smartctl -s H -l health -d 'Prints the health status of the device'
complete -c smartctl -s c -l capabilities -d '[ATA] Prints only the generic SMART capabilities'
complete -c smartctl -s A -l attributes -d '[ATA] Prints only the vendor specific SMART Attributes'
complete -c smartctl -s f -l format -d '[ATA only] Selects the output format of the attributes: '
complete -c smartctl -s l -l log -d 'Prints various device logs.  The valid arguments to this option are: '
complete -c smartctl -s v -l vendorattribute -d '[ATA only] Sets a vendor-specific raw value print FORMAT, an optional BYTEORD…'
complete -c smartctl -s F -l firmwarebug -d '[ATA only] Modifies the behavior of smartctl to compensate for some known and…'
complete -c smartctl -s P -l presets -d '[ATA only] Specifies whether smartctl should use any preset options that are …'
complete -c smartctl -s B -l drivedb -d '[ATA only] Read the drive database from FILE'
complete -c smartctl -s t -l test -d 'Executes TEST immediately'
complete -c smartctl -s C -l captive -d '[ATA] Runs self-tests in captive mode'
complete -c smartctl -s X -l abort -d 'Aborts non-captive SMART Self Tests'

